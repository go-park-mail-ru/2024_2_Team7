{
    "swagger": "2.0",
    "info": {
        "description": "This is a description of the Vihodnoy server.",
        "title": "Swagger Vihodnoy API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {},
        "version": "1.0"
    },
    "paths": {
        "/categories": {
            "get": {
                "description": "Получить список всех доступных категорий событий",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "categories"
                ],
                "summary": "Получить все категории",
                "responses": {
                    "200": {
                        "description": "Список категорий",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Category"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httpErrors.HttpError"
                        }
                    }
                }
            }
        },
        "/events": {
            "get": {
                "description": "Получить все существующие события",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "events"
                ],
                "summary": "Получить все события",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Номер страницы (по умолчанию 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Количество событий на странице (по умолчанию 30)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/events.GetEventsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httpErrors.HttpError"
                        }
                    }
                }
            },
            "post": {
                "description": "Создает новое событие в системе",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "events"
                ],
                "summary": "Создание события",
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/events.EventResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Data",
                        "schema": {
                            "$ref": "#/definitions/httpErrors.HttpError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httpErrors.HttpError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httpErrors.HttpError"
                        }
                    }
                }
            }
        },
        "/events/categories/{category}": {
            "get": {
                "description": "Возвращает события по ID категории",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "events"
                ],
                "summary": "Получение событий по категори",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/events.GetEventsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httpErrors.HttpError"
                        }
                    }
                }
            }
        },
        "/events/tags/{tag}": {
            "get": {
                "description": "Возвращает события по тегу",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "events"
                ],
                "summary": "Получение событий по тегу",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/events.GetEventsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httpErrors.HttpError"
                        }
                    }
                }
            }
        },
        "/events/{id}": {
            "get": {
                "description": "Возвращает информацию о событии по его идентификатору",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "events"
                ],
                "summary": "Получение события по ID",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/events.EventResponse"
                        }
                    },
                    "404": {
                        "description": "Event Not Found",
                        "schema": {
                            "$ref": "#/definitions/httpErrors.HttpError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httpErrors.HttpError"
                        }
                    }
                }
            },
            "put": {
                "description": "Обновляет данные существующего события",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "events"
                ],
                "summary": "Обновление события",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/events.EventResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Data",
                        "schema": {
                            "$ref": "#/definitions/httpErrors.HttpError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httpErrors.HttpError"
                        }
                    },
                    "403": {
                        "description": "Access Denied",
                        "schema": {
                            "$ref": "#/definitions/httpErrors.HttpError"
                        }
                    },
                    "404": {
                        "description": "Event Not Found",
                        "schema": {
                            "$ref": "#/definitions/httpErrors.HttpError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httpErrors.HttpError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Удаляет существующее событие",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "events"
                ],
                "summary": "Удаление события",
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httpErrors.HttpError"
                        }
                    },
                    "403": {
                        "description": "Access Denied",
                        "schema": {
                            "$ref": "#/definitions/httpErrors.HttpError"
                        }
                    },
                    "404": {
                        "description": "Event Not Found",
                        "schema": {
                            "$ref": "#/definitions/httpErrors.HttpError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httpErrors.HttpError"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Авторизует пользователя",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Авторизация пользователя",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/auth.UserResponse"
                        }
                    },
                    "400": {
                        "description": "Wrong Credentials",
                        "schema": {
                            "$ref": "#/definitions/httpErrors.HttpError"
                        }
                    },
                    "401": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/utils.ValidationErrResponse"
                        }
                    },
                    "403": {
                        "description": "User is alredy logged in",
                        "schema": {
                            "$ref": "#/definitions/httpErrors.HttpError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httpErrors.HttpError"
                        }
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "description": "Выход из аккаунта",
                "tags": [
                    "auth"
                ],
                "summary": "Выход из системы",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/httpErrors.HttpError"
                        }
                    }
                }
            }
        },
        "/profile": {
            "get": {
                "description": "Возвращает информацию о профиле текущего пользователя",
                "tags": [
                    "profile"
                ],
                "summary": "Профиль пользователя",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/auth.ProfileResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httpErrors.HttpError"
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "description": "Создает нового пользователя",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Регистрация пользователя",
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/auth.UserResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Data / Username or Email already taken",
                        "schema": {
                            "$ref": "#/definitions/httpErrors.HttpError"
                        }
                    },
                    "401": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/utils.ValidationErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httpErrors.HttpError"
                        }
                    }
                }
            }
        },
        "/session": {
            "get": {
                "description": "Возвращает информацию о пользователе, если сессия активна",
                "tags": [
                    "auth"
                ],
                "summary": "Проверка сессии",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/auth.AuthResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "auth.AuthResponse": {
            "type": "object",
            "properties": {
                "user": {
                    "$ref": "#/definitions/auth.UserResponse"
                }
            }
        },
        "auth.ProfileResponse": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "image": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "auth.UserResponse": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "image": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "events.EventResponse": {
            "type": "object",
            "properties": {
                "author": {
                    "type": "integer"
                },
                "capacity": {
                    "type": "integer"
                },
                "category_id": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "event_end": {
                    "type": "string"
                },
                "event_start": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "image": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "tag": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "events.GetEventsResponse": {
            "type": "object",
            "properties": {
                "events": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/events.EventResponse"
                    }
                }
            }
        },
        "httpErrors.HttpError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "models.AuthError": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "field": {
                    "type": "string"
                }
            }
        },
        "models.Category": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "utils.ValidationErrResponse": {
            "type": "object",
            "properties": {
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.AuthError"
                    }
                }
            }
        }
    }
}