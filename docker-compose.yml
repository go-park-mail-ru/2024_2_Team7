services:
  auth_service:

    build:
      context: .
      dockerfile: ./internal/auth/Dockerfile
    ports:
      - "50051:50051"
    depends_on:
      postgres:
        condition: service_started
      redis:
        condition: service_started
    env_file:
      - .env
    volumes:
      - .:/app

  user_service:
    build:
      context: .
      dockerfile: ./internal/user/Dockerfile
    ports:
      - "50052:50052"
    depends_on:
      postgres:
        condition: service_started
      redis:
        condition: service_started
    env_file:
      - .env
    volumes:
      - .:/app

  event_service:
    build:
      context: .
      dockerfile: ./internal/event/Dockerfile
    ports:
      - "50053:50053"
    depends_on:
      postgres:
        condition: service_started
      redis:
        condition: service_started
    env_file:
      - .env
    volumes:
      - .:/app

  image_service:

    build:
      context: .
      dockerfile: ./internal/image/Dockerfile
    ports:
      - "50054:50054"
    depends_on:
      postgres:
        condition: service_started
      redis:
        condition: service_started
    env_file:
      - .env
    volumes:
      - .:/app


  server_service:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
      auth_service:
        condition: service_started
      user_service:
        condition: service_started
      event_service:
        condition: service_started
      image_service:
        condition: service_started
    env_file:
      - .env
    volumes:
      - .:/app

  postgres:
    image: postgres:latest
    container_name: my_postgres_container
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER}" ]
      interval: 5s
      timeout: 5s
      retries: 3
  redis:
    image: redis:latest
    ports:
      - "6379:6379" 

volumes:
  postgres_data:
    driver: local
networks:
  default:
    name: team7_network

