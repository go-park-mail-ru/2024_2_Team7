#version: '3.8'
#services:
#  api:
#    build:
#      context: .
#      dockerfile: Dockerfile
#    ports:
#      - "8080:8080"
#    depends_on:
#      - postgres
#    environment:
#      POSTGRES_DB: kudago_db
#      POSTGRES_USER: postgres
#      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
#    env_file:
#      - .env
#    volumes:
#      - .:/app
#
#  postgres:
#    image: postgres:latest
#    container_name: my_postgres_container
#    restart: unless-stopped
#    env_file:
#      - .env
#    ports:
#      - "5432:5432"
#    volumes:
#      - postgres_data:/var/lib/postgresql/data
#  redis:
#    image: redis:latest
#    ports:
#    - "6379:6379"
#
#volumes:
#  postgres_data:
#    driver: local
# все сверху твое внизу мое целиком и полностью 
services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    env_file:
      - .env
    volumes:
      - .:/app

  postgres:
    image: postgres:latest
    container_name: my_postgres_container
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - ${PWD}/db-data/:/var/lib/postgresql/data/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]
    env_file:
      - .env
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
    driver: local